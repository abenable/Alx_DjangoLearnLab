"""
Django settings for LibraryProject project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import sys
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Add the app directory to Python path
sys.path.append(str(BASE_DIR))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-yzyzq&$0q+xj7vx4r=*moak=pg8lqp(vgo-g7^i79tp1-r9(na'
# SECURITY: In production, this should be set to a secure random value and kept out of version control
# Consider using environment variables or a secure secrets management tool

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False  # SECURITY: Debug is disabled in production to prevent leaking sensitive information

ALLOWED_HOSTS = ['localhost', '127.0.0.1']  # SECURITY: In production, specify your actual domain names

# Security Settings
# SECURITY: Browser-side security enhancements
SECURE_BROWSER_XSS_FILTER = True  # Enables browser's XSS filtering protection
SECURE_CONTENT_TYPE_NOSNIFF = True  # Prevents browser from trying to guess content types
X_FRAME_OPTIONS = 'DENY'  # Prevents clickjacking by denying all framing of this site

# SECURITY: Cookie security settings - requires HTTPS
CSRF_COOKIE_SECURE = True  # Ensures CSRF cookies are only sent over HTTPS
SESSION_COOKIE_SECURE = True  # Ensures session cookies are only sent over HTTPS
SECURE_SSL_REDIRECT = True  # Forces all connections to use HTTPS instead of HTTP

# SECURITY: HTTP Strict Transport Security
SECURE_HSTS_SECONDS = 31536000  # 1 year - instructs browsers to use HTTPS for this domain for the specified period
SECURE_HSTS_INCLUDE_SUBDOMAINS = True  # Applies HSTS to all subdomains as well
SECURE_HSTS_PRELOAD = True  # Makes the site eligible for HSTS preloading in browsers

# Content Security Policy
# SECURITY: CSP restricts sources from which content can be loaded (helps prevent XSS)
CSP_DEFAULT_SRC = ("'self'",)  # By default, only allow content from the same origin
CSP_STYLE_SRC = ("'self'", "'unsafe-inline'")  # Allow styles from same origin and inline styles
CSP_SCRIPT_SRC = ("'self'",)  # Only allow scripts from same origin
CSP_IMG_SRC = ("'self'",)  # Only allow images from same origin
CSP_FONT_SRC = ("'self'",)  # Only allow fonts from same origin

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'bookshelf',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',  # SECURITY: Handles security headers and redirects
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',  # SECURITY: Protects against Cross-Site Request Forgery
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',  # SECURITY: Sets X-Frame-Options header
    'csp.middleware.CSPMiddleware',  # SECURITY: Implements Content Security Policy
]

ROOT_URLCONF = 'LibraryProject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'LibraryProject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Media files (Uploaded files)
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Authentication settings
LOGIN_REDIRECT_URL = 'bookshelf:member_dashboard'
LOGOUT_REDIRECT_URL = 'bookshelf:login'
LOGIN_URL = 'bookshelf:login'

# Custom User Model
AUTH_USER_MODEL = 'bookshelf.CustomUser'
